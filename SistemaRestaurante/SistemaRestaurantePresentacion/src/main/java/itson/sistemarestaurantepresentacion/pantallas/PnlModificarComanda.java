package itson.sistemarestaurantepresentacion.pantallas;

import java.awt.Font;
import java.math.BigDecimal;
import java.util.LinkedList;
import java.util.List;

import javax.swing.Box;
import javax.swing.JOptionPane;

import itson.sistemarestaurantedominio.DetallesComanda;
import itson.sistemarestaurantedominio.dtos.ClienteDTO;
import itson.sistemarestaurantedominio.dtos.ComandaDTO;
import itson.sistemarestaurantedominio.dtos.DetallesComandaDTO;
import itson.sistemarestaurantedominio.dtos.MesaDTO;
import itson.sistemarestaurantedominio.dtos.NuevoDetalleComandaDTO;
import itson.sistemarestaurantedominio.dtos.ProductoDTO;
import itson.sistemarestaurantenegocio.excepciones.NegocioException;
import itson.sistemarestaurantenegocio.factory.ObjetosNegocioFactory;
import itson.sistemarestaurantenegocio.interfaces.IClientesBO;
import itson.sistemarestaurantenegocio.interfaces.IComandasBO;
import itson.sistemarestaurantenegocio.interfaces.IDetallesComandaBO;
import itson.sistemarestaurantenegocio.interfaces.IMesasBO;
import itson.sistemarestaurantepresentacion.control.ControlFlujo;
import itson.sistemarestaurantepresentacion.modales.ModalProductos;
import itson.sistemarestaurantepresentacion.paneles.PnlDetalleComanda;
import itson.sistemarestaurantepresentacion.recursos.Formatos;
/**
 *
 * @author pc
 */
public class PnlModificarComanda extends javax.swing.JPanel {

    private ComandaDTO comanda;
    private List<DetallesComandaDTO> detallesComanda;
    List<PnlDetalleComanda> panelesDetalles = new LinkedList<>();

    /**
     * Creates new form PnlModificarComanda
     */
    public PnlModificarComanda(ComandaDTO comanda) {
        this.comanda = comanda;
        initComponents();
        cargarDatosComanda();
        cargarDetallesComanda();
    }

    /**
     * Metodo para cargar los datos de la comanda en los elementos graficos
     */
    private void cargarDatosComanda() {
        try {
            lblFolio.setText("Comanda con Folio: " + comanda.getFolio());
            IMesasBO mesasBO = ObjetosNegocioFactory.crearMesasBO();
            MesaDTO mesa = mesasBO.obtenerMesaPorId(comanda.getIdMesa());
            lblMesa.setText("Mesa " + mesa.getNumeroMesa());
            lblFecha.setText(
                    Formatos.cargarFecha(comanda.getFechaHora()) + "   " + Formatos.cargarHora(comanda.getFechaHora()));
            if (comanda.getIdCliente() != null) {
                IClientesBO clientesBO = ObjetosNegocioFactory.crearClientesBO();
                ClienteDTO cliente = clientesBO.obtenerClientePorId(comanda.getIdCliente());
                txtCliente.setText(
                        cliente.getNombre() + " " + cliente.getApellidoPaterno() + " " + cliente.getApellidoMaterno());
            }
            lblEstado.setText(String.valueOf(comanda.getEstado()).substring(0, 1)
                    .concat(String.valueOf(comanda.getEstado()).substring(1).toLowerCase()));
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Error: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * Metodo para cargar los detalles de la comanda
     */
    private void cargarDetallesComanda() {
        try {
            IDetallesComandaBO detallesComandaBO = ObjetosNegocioFactory.crearDetallesComandaBO();
            this.detallesComanda = detallesComandaBO.obtenerDetallesComanda(comanda.getIdComanda());
            cargarPanelesDetalles(detallesComanda);
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(
                    null,
                    "Error: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarPanelesDetalles(List<DetallesComandaDTO> detalles){
        if (!detalles.isEmpty()) {
            for (DetallesComandaDTO detalle : detalles) {
                PnlDetalleComanda pnlDetalleComanda = new PnlDetalleComanda(detalle, this);
                pnlDetallesComanda.add(pnlDetalleComanda);
                pnlDetallesComanda.add(Box.createVerticalStrut(20));
                this.panelesDetalles.add(pnlDetalleComanda);
            }
        }
    }

    public void cargarPanelesDetalles(){
        pnlDetallesComanda.removeAll();
        if(!panelesDetalles.isEmpty()){
            for(PnlDetalleComanda pnl : panelesDetalles){
                pnlDetallesComanda.add(pnl);
                pnlDetallesComanda.add(Box.createVerticalStrut(20));
            }
            pnlDetallesComanda.repaint();
            pnlDetallesComanda.revalidate();
        }
    }

    public List<PnlDetalleComanda> getPanelesDetalles(){
        return this.panelesDetalles;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipal = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        pnlComanda = new itson.sistemarestaurantepresentacion.recursos.RoundedPanel();
        lblFolio = new javax.swing.JLabel();
        scrollPnlDetallesComanda = new javax.swing.JScrollPane();
        pnlDetallesComanda = new javax.swing.JPanel();
        lblMesa = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblEstado = new javax.swing.JLabel();
        txtCliente = new javax.swing.JLabel();
        btnBuscarProductos = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();

        pnlPrincipal.setBackground(new java.awt.Color(37, 40, 54));

        lblTitulo.setFont(new Font("Poppins", Font.BOLD, 36));
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Modificar Comanda");

        pnlComanda.setBackground(new java.awt.Color(31, 31, 31));
        pnlComanda.setRoundBottomLeft(50);
        pnlComanda.setRoundBottomRight(50);
        pnlComanda.setRoundTopLeft(50);
        pnlComanda.setRoundTopRight(50);

        lblFolio.setFont(new Font("Poppins", Font.PLAIN, 18));
        lblFolio.setForeground(new java.awt.Color(255, 255, 255));
        lblFolio.setText("Comanda con Folio: ");

        scrollPnlDetallesComanda.setBorder(null);

        pnlDetallesComanda.setBackground(new java.awt.Color(31, 31, 31));
        pnlDetallesComanda.setLayout(new javax.swing.BoxLayout(pnlDetallesComanda, javax.swing.BoxLayout.Y_AXIS));
        scrollPnlDetallesComanda.setViewportView(pnlDetallesComanda);

        lblMesa.setFont(new Font("Poppins", Font.PLAIN, 18));
        lblMesa.setForeground(new java.awt.Color(255, 255, 255));
        lblMesa.setText("Mesa ...");

        lblFecha.setFont(new Font("Poppins", Font.BOLD, 18));
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("Fecha: ...");

        lblCliente.setFont(new Font("Poppins", Font.BOLD, 18));
        lblCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblCliente.setText("Cliente: ");

        jPanel1.setBackground(new java.awt.Color(80, 205, 137));

        lblEstado.setFont(new Font("Poppins", Font.PLAIN, 18));
        lblEstado.setForeground(new java.awt.Color(255, 255, 255));
        lblEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEstado.setText("Estado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtCliente.setFont(new Font("Poppins", Font.BOLD, 18));
        txtCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtCliente.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        btnBuscarProductos.setBackground(new java.awt.Color(217, 217, 217));
        btnBuscarProductos.setFont(new Font("Poppins", Font.PLAIN, 18 ));
        btnBuscarProductos.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscarProductos.setText("Buscar Productos");
        btnBuscarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlComandaLayout = new javax.swing.GroupLayout(pnlComanda);
        pnlComanda.setLayout(pnlComandaLayout);
        pnlComandaLayout.setHorizontalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addComponent(scrollPnlDetallesComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(46, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlComandaLayout.createSequentialGroup()
                        .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addComponent(lblMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addComponent(lblFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(108, 108, 108)
                                .addComponent(btnBuscarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)))
                        .addGap(72, 72, 72))))
        );
        pnlComandaLayout.setVerticalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lblFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnBuscarProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(scrollPnlDetallesComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        btnModificar.setBackground(new java.awt.Color(80, 205, 137));
        btnModificar.setFont(new Font("Poppins", Font.PLAIN, 18));
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(94, 94, 94));
        btnVolver.setFont(new Font("Poppins", Font.PLAIN, 18));
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Cancelar");
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addContainerGap(64, Short.MAX_VALUE)
                        .addComponent(pnlComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(389, 389, 389))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(pnlComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(
            null, 
            "¿Seguro que desea modificar la comanda?", 
            "Confirmar", 
            JOptionPane.YES_NO_OPTION
        );
        if(confirmacion != JOptionPane.YES_OPTION){
            return;
        }
        IComandasBO comandasBO = ObjetosNegocioFactory.crearComandasBO();
        List<DetallesComandaDTO> nuevosDetalles = cargarRelaciones();
        try{
            comandasBO.modificarComanda(this.comanda, nuevosDetalles);
            ControlFlujo.mostrarEspecificacionesComanda(comanda);
            JOptionPane.showMessageDialog(
                null,
                "Comanda modificada con éxito",
                "Éxito",
                JOptionPane.INFORMATION_MESSAGE
            );
        } catch(NegocioException e){
            JOptionPane.showMessageDialog(
                null,
                e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(
            null,
            "¿Seguro que desea cancelar?",
            "Confirmar",
            JOptionPane.YES_NO_OPTION
        );
        if(confirmacion == JOptionPane.YES_OPTION){
            ControlFlujo.mostrarEspecificacionesComanda(comanda);
        }
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnBuscarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductosActionPerformed
        ModalProductos modalProductos = new ModalProductos(null, true);
        ProductoDTO producto = modalProductos.obtenerProductoSeleccionado();
        if (producto == null) {
            return;
        }
        DetallesComandaDTO detalleComanda = 
            new DetallesComandaDTO(
                1,
                "",
                producto.getPrecio(),
                producto.getPrecio(),
                comanda.getIdComanda(),
                producto.getId()
            );
        PnlDetalleComanda pnlDetalleComanda = new PnlDetalleComanda(detalleComanda, this);
        panelesDetalles.add(pnlDetalleComanda);
        cargarPanelesDetalles();
        
    }//GEN-LAST:event_btnBuscarProductosActionPerformed

        private List<DetallesComandaDTO> cargarRelaciones() {
        List<DetallesComandaDTO> detallesComanda = new LinkedList<>();
        
        for (PnlDetalleComanda detalle : this.panelesDetalles) {
            ProductoDTO producto = detalle.getProducto();
            if (producto != null) {
                Long idProducto = producto.getId();
                BigDecimal precioUnitario = producto.getPrecio();
                try{
                    Integer cantidad = Integer.parseInt(detalle.getSpinnerCantidad().getValue().toString());
                    if (cantidad <= 0) {
                        JOptionPane.showMessageDialog(this, "La cantidad debe ser mayor a cero.", "Error",
                                JOptionPane.ERROR_MESSAGE);
                        return null;
                    }
                    BigDecimal totalPorProducto = precioUnitario.multiply(new BigDecimal(cantidad));
                    String comentarios = detalle.getTxtAreaComentarios().getText();
                    
                    if(comentarios.isBlank() || comentarios.isEmpty()){
                        DetallesComandaDTO detalleComanda = new DetallesComandaDTO(cantidad,"", precioUnitario, totalPorProducto,this.comanda.getIdComanda(), idProducto);    
                        detallesComanda.add(detalleComanda);
                    } else{
                        DetallesComandaDTO detalleComanda = new DetallesComandaDTO(cantidad,comentarios, precioUnitario, totalPorProducto,this.comanda.getIdComanda(), idProducto);    
                        detallesComanda.add(detalleComanda);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "La cantidad debe ser un número válido.", "Error",
                            JOptionPane.ERROR_MESSAGE);
                    return null;
                }
            }
        }
        return detallesComanda;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarProductos;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFolio;
    private javax.swing.JLabel lblMesa;
    private javax.swing.JLabel lblTitulo;
    private itson.sistemarestaurantepresentacion.recursos.RoundedPanel pnlComanda;
    private javax.swing.JPanel pnlDetallesComanda;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JScrollPane scrollPnlDetallesComanda;
    private javax.swing.JLabel txtCliente;
    // End of variables declaration//GEN-END:variables
}
